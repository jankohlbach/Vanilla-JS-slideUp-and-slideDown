(()=>{const activeClass="open",getHeight=element=>{element.setAttribute("style","display: block;");const height=element.clientHeight,{paddingTop:paddingTop}=getComputedStyle(element),{paddingBottom:paddingBottom}=getComputedStyle(element);return element.setAttribute("style","display: none;"),{height:height,paddingTop:paddingTop,paddingBottom:paddingBottom}},slideDown=element=>{if(element.parentNode.classList.contains("open"))return;const dimensions=getHeight(element),height=parseInt(dimensions.height,10),paddingT=parseInt(dimensions.paddingTop,10),paddingB=parseInt(dimensions.paddingBottom,10),time=height/3+150;element.parentNode.classList.add("open"),element.setAttribute("style","overflow: hidden; display: block; padding-top: 0; padding-bottom: 0;");const initTime=(new Date).getTime(),repeat=()=>{const newTime=(new Date).getTime()-initTime,step=0+height*newTime/time,stepPaddingT=0+paddingT*newTime/time,stepPaddingB=0+paddingB*newTime/time;newTime<=time?element.setAttribute("style",`overflow: hidden; display: block; padding-top: ${stepPaddingT}px; padding-bottom: ${stepPaddingB}px; height: ${step}px`):element.setAttribute("style","display: block");const repeatLoop=requestAnimationFrame(repeat);Math.floor(step)>height&&cancelAnimationFrame(repeatLoop)};repeat()},slideUp=element=>{const height=parseInt(element.clientHeight,10),paddingT=parseInt(getComputedStyle(element).paddingTop,10),paddingB=parseInt(getComputedStyle(element).paddingBottom,10),time=height/3+150;element.parentNode.classList.remove("open"),element.setAttribute("style","overflow: hidden; display: block; padding-top: 0; padding-bottom: 0;");const initTime=(new Date).getTime(),repeat=()=>{const newTime=(new Date).getTime()-initTime,step=height+-height*newTime/time,stepPaddingT=paddingT+-paddingT*newTime/time,stepPaddingB=paddingB+-paddingB*newTime/time;newTime<=time?element.setAttribute("style",`overflow: hidden; display: block; padding-top: ${stepPaddingT}px; padding-bottom: ${stepPaddingB}px; height: ${step}px`):element.setAttribute("style","display: none");const repeatLoop=requestAnimationFrame(repeat);Math.floor(step)<0&&cancelAnimationFrame(repeatLoop)};repeat()},toggleHeads=document.querySelectorAll(".toggle-head");toggleHeads.forEach(toggleHead=>{toggleHead.addEventListener("click",()=>{toggleHead.parentNode.classList.contains("open")?slideUp(toggleHead.nextElementSibling):slideDown(toggleHead.nextElementSibling)})});const toggleFooter=document.querySelectorAll(".toggle-foot");toggleFooter.forEach(toggleFoot=>{toggleFoot.addEventListener("click",()=>{slideUp(toggleFoot.parentNode)})})}).call(this);
//# sourceMappingURL=main.min.js.map